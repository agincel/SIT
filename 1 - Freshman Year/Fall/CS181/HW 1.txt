Adam Gincel

Professor: Antonio R. Nicolosi

September 12th 2014


I pledge my honor I have abided by the Stevens Honor System.

1.
	a)  0011 1001 1001 1001
		0011 1001 1001 1010
		0011 1001 1001 1011
		0011 1001 1001 1100
		0011 1001 1001 1101
		0011 1001 1001 1110
		0011 1001 1001 1111
		0011 1001 1010 0000
		0011 1001 1010 0001

	b) 
		(1100 0001 0111)2 = (3095)10
		(1001 1111 0000)2 = (2544)10
		(1101 0001 1110)2 = (3358)10
		(0001 1111 1111 1111)2 = (8191)10

		(554)8 = (364)10
		(3440)8 = (1824)10
		(7777)8 = (4095)10

		(554)16 = (1364)10
		(720)16 = (1824)10
		(1ff)16 = (511)10

		
	c) 
		1001 1100 0011 1000
	+	0101 0111 0101 1011

	=	1111 0011 1001 0011
		


		1000 1001 1010 1111
	+	0001 1011 0011 1111

	=	1010 0100 1110 1110


		0011 0010 0101 0111
	+	0110 1011 1001 1001

	=	1001 1101 1111 0000


	d)
	
		(35)10 = (0010 0011)2, (43)8, (23)16

		(512)10 = (0010 0000 0000)2, (1000)8, (200)16

		(1000)10 = (0011 1110 1000)2, (1750)8, (3E8)16

		(2014)10 = (0111 1101 1110)2, (3736)8, (7DE)16

		(3010)10 = (1011 1000 0010)2, (5702)8, (BC2)16

		(5555)10 = (0001 0101 1011 0011)2, (12663)8, (15B3)16
	
		(8192)10 = (0010 0000 0000 0000)2, (20000)8, (2000)16

		(10001)10 = (0010 0010 0011 1001)2, (21071)8, (2239)16

		
	e)
		log2(n) = 30.51…round up to next integer, it takes 31 bits to store 1,534,223,121 in binary as an unsigned integer.
		
		log8(n) = 10.17 = 11 bits.

		log16(n) = 7.628 = 8 bits.

	f)	
		(0011 1111 1111)2 needs 4 decimal digits.

		(6666)8 needs 4 decimal digits.

		(fad)16 also needs 4 decimal digits.

2.

	a)
		(-102)10 = (1001 1010)2 under two’s complement.
		(-748)10 = (1101 0001 0100)2 under two’s complement.
		(-8191)10 = (1110 0000 0000 0001)2 under two’s complement.
		(-16384)10 = (1100 0000 0000 0000)2 under two’s complement.

		
	b)
		1001 0011 1001 1001
	+	0111 0000 1001 0110
	=      1  0000 0100 0010 1111 – overflow

		
		0100 1001 0101 1111
	+ 	0011 1010 1101 1111
	=	1000 0100 0011 1110 – overflow under two’s complement (two positives added up to a negative)


		1000 0101 1010 1101
		1101 1111 1110 1110
	=      1  0110 0101 1001 1011 – overflow

	c) As long as there is enough room for a leading 0 in positive numbers, you cannot overflow while negating a number. The process of flipping the 0s and 1s never adds more digits.

	d) 
		0111 0001 1101 0011
	+	0011 1110 0110 1101
	=	1011 0000 0100 0000 – overflow (two positives = negative)


		0001 0011 0011 1111
	+	1100 1000 1111 1010
	=	1101 1100 0011 1001


		1111 0001 0011 0111
	+ 	1111 0000 0000 0001
	=      1  1110 0001 0011 1000 - overflow
		

		
	
		
